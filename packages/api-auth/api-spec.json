{
  "openapi": "3.0.1",
  "info": {
    "title": ".NET Core Web API",
    "version": "1.0"
  },
  "paths": {
    "/api/admin/encrypt": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Encrypt data",
        "description": "Encrypt data",
        "operationId": "EncryptData",
        "parameters": [
          {
            "name": "decryptedData",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Encrypted Data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/encrypt-list": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Encrypt list of data",
        "description": "Encrypt list of data",
        "operationId": "EncryptDataList",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Encrypted list of data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/decrypt": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Decrypt data",
        "description": "Decrypt data",
        "operationId": "DecryptData",
        "parameters": [
          {
            "name": "encryptedData",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Decrypted Data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/decrypt-list": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Decrypt list of data",
        "description": "Decrypt list of data",
        "operationId": "DecryptDataList",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Decrypted list of data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/user-details": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get user details",
        "description": "Get user details",
        "operationId": "GetUserDetails",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cardinalDirection",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/CardinalDirection"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailsResponse"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/card-activation-transactions": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get card activation transactions for card number",
        "description": "Get card activation transactions for card number",
        "operationId": "GetCardActivationTransactions",
        "parameters": [
          {
            "name": "cardNumber",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get card activation transactions.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CardActivationTransactionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CardActivationTransactionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CardActivationTransactionDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/subscribe-newsletter": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Subscribe user to newsletter",
        "description": "Subscribe user to newsletter",
        "operationId": "AdminSubscribeNewsletter",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "doiNeeded",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "source",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cardinalDirection",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/CardinalDirection"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user subscribed to newsletter.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/session-count": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Auth session count",
        "description": "Auth session count",
        "operationId": "SessionCount",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns Auth session count.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/sessions": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Auth sessions",
        "description": "Auth sessions",
        "operationId": "GetSessions",
        "parameters": [
          {
            "name": "maxCount",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns Auth sessions.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/get-users-for-data-exports": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get users",
        "description": "Get users",
        "operationId": "GetUserForDataExports",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all verified users.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthUser"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthUser"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthUser"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/countrycode/cardinal-direction": {
      "get": {
        "tags": [
          "CountryCode"
        ],
        "summary": "Returns cardinal direction for a given country code and postal code",
        "description": "Returns cardinal direction for a given country code and postal code",
        "operationId": "GetCardinalDirection",
        "parameters": [
          {
            "name": "countryCode",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postalCode",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns cardinal direction.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "404": {
            "description": "No such country code found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/postalcode/cardinal-direction": {
      "get": {
        "tags": [
          "PostalCode"
        ],
        "summary": "Returns cardinal direction for a given postalcode",
        "description": "Returns cardinal direction for a given postalcode",
        "operationId": "PostalCodeGetCardinalDirection",
        "parameters": [
          {
            "name": "domain",
            "in": "header",
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Domain"
            }
          },
          {
            "name": "postalCode",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns cardinal direction.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "404": {
            "description": "No such postal code found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Registers a customer by email (send domain as a header parameter)",
        "description": "Registers a customer by email (send domain as a header parameter)",
        "operationId": "RegisterCustomerEmail",
        "parameters": [
          {
            "name": "domain",
            "in": "header",
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Domain"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCustomerByEmailRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCustomerByEmailRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCustomerByEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Customer was registered.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "404": {
            "description": "Postal code or country code not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/email-verification/{verificationId}/{domain}": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Handle email verification",
        "description": "Callback url for the email verification",
        "operationId": "HandleEmailVerification",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Domain"
            }
          },
          {
            "name": "verificationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email Verified.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "302": {
            "description": "Redirect to callback url or invalid link."
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/verification-callback/{verificationId}/{domain}": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get user email by verification code.",
        "description": "Callback url for the email verification to return email and delete user verification",
        "operationId": "EmailVerificationCallbackAsync",
        "parameters": [
          {
            "name": "verificationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Domain"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email Verified.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NewPasswordResponseDataResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewPasswordResponseDataResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewPasswordResponseDataResponseBase"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "302": {
            "description": "Redirect to invalid link if the link is not valid"
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get JWT token using username and password (send domain as a header parameter)",
        "description": "Get JWT token using username and password (send domain as a header parameter)",
        "operationId": "JwtToken",
        "parameters": [
          {
            "name": "domain",
            "in": "header",
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Domain"
            }
          },
          {
            "name": "Cookie-Required",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequestModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequestModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token was generated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthJwtModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthJwtModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthJwtModel"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/register-deals": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Registers a user on Deals",
        "description": "Registers a user on Deals",
        "operationId": "RegisterOnDealsAsync",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DealsRegistrationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DealsRegistrationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DealsRegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/register-sports": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Registers a user on Sports",
        "description": "Registers a user on Sports",
        "operationId": "RegisterOnSportsAsync",
        "parameters": [
          {
            "name": "domain",
            "in": "header",
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Domain"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SportsRegistrationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SportsRegistrationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SportsRegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/refresh-token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Generates new Jwt token using refresh token (in cookie 'refreshToken')",
        "description": "Generates new Jwt token using refresh token (in cookie 'refreshToken')",
        "operationId": "RenewJwtToken",
        "parameters": [
          {
            "name": "domain",
            "in": "header",
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Domain"
            }
          },
          {
            "name": "cardinalDirection",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/CardinalDirection"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token was generated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthJwtModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthJwtModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthJwtModel"
                }
              }
            }
          },
          "400": {
            "description": "Tokens are not provided."
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Revokes provided refresh token (in cookie 'refreshToken')",
        "description": "Revokes provided refresh token (in cookie 'refreshToken')",
        "operationId": "Logout",
        "parameters": [
          {
            "name": "domain",
            "in": "header",
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Domain"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevokeTokenRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RevokeTokenRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RevokeTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Refresh tokens revoked.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringBaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/forgot-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "ForgotPassword by email",
        "description": "ForgotPassword by email",
        "operationId": "ForgotPassword",
        "parameters": [
          {
            "name": "domain",
            "in": "header",
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Domain"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordByEmailRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordByEmailRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordByEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Forgot password link sent to email.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/forgot-password/{forgotPasswordId}/{domain}": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Handles reset password",
        "description": "Handles reset password",
        "operationId": "ForgotPasswordAsync",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Domain"
            }
          },
          {
            "name": "forgotPasswordId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to callback link."
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/forgot-password-by-code/{forgotPasswordId}": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Handles reset password by entring code manually",
        "description": "Handles reset password by entring code manually",
        "operationId": "ForgotPasswordByCodeAsync",
        "parameters": [
          {
            "name": "domain",
            "in": "header",
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Domain"
            }
          },
          {
            "name": "forgotPasswordId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Forgot password code is valid.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringDataResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringDataResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringDataResponseBase"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/{code}/new-password": {
      "put": {
        "tags": [
          "Authentication"
        ],
        "summary": "Update password",
        "description": "Updates user password",
        "operationId": "UpdateUserPassword",
        "parameters": [
          {
            "name": "domain",
            "in": "header",
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Domain"
            }
          },
          {
            "name": "code",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password was updated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NewPasswordResponseDataMessageResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewPasswordResponseDataMessageResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewPasswordResponseDataMessageResponseBase"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "404": {
            "description": "AuthorizationCode not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/cardinal-direction": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get auth user cardinal direction by email",
        "description": "Get auth user cardinal direction by email",
        "operationId": "AuthenticationGetCardinalDirection",
        "parameters": [
          {
            "name": "domain",
            "in": "header",
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Domain"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardinalDirectionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CardinalDirectionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CardinalDirectionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CardinalDirectionResponseDataResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardinalDirectionResponseDataResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardinalDirectionResponseDataResponseBase"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/postalcode-check": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Check postal code",
        "description": "Check postal code",
        "operationId": "CheckPostalcode",
        "parameters": [
          {
            "name": "domain",
            "in": "header",
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Domain"
            }
          },
          {
            "name": "Postalcode",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "pattern": "^\\d{5}$",
              "type": "string"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sued user found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResult"
                }
              }
            }
          },
          "404": {
            "description": "Postalcode not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "400": {
            "description": "The postal code is not sued.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/resend-verification-email": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Resend verification email",
        "description": "Resend verification email",
        "operationId": "ResendEmailVerificationAsync",
        "parameters": [
          {
            "name": "domain",
            "in": "header",
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Domain"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendVerificationEmailRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendVerificationEmailRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResendVerificationEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification Email Resent.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/subscribe-newsletter": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "subscribe a user to newsletter",
        "description": "subscribe a user to newsletter",
        "operationId": "AuthenticationSubscribeNewsletter",
        "parameters": [
          {
            "name": "domain",
            "in": "header",
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Domain"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscribeNewsletterRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscribeNewsletterRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubscribeNewsletterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Newsletter Confirmation mail sent."
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/subscribe-newsletter/{newsletterSubscriptionId}/{domain}": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Confirm newsletter subscription",
        "description": "Confirm newsletter subscription",
        "operationId": "ConfirmNewsletterSubscription",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Domain"
            }
          },
          {
            "name": "newsletterSubscriptionId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to landing page."
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActionResult": {
        "type": "object",
        "additionalProperties": false
      },
      "AuthJwtModel": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "nullable": true
          },
          "expires_in": {
            "type": "integer",
            "format": "int32"
          },
          "refresh_expires_in": {
            "type": "integer",
            "format": "int32"
          },
          "refresh_token": {
            "type": "string",
            "nullable": true
          },
          "token_type": {
            "type": "string",
            "nullable": true
          },
          "not-before-policy": {
            "type": "integer",
            "format": "int32"
          },
          "session_state": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthUser": {
        "required": [
          "cardinalDirection",
          "email"
        ],
        "type": "object",
        "properties": {
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "email": {
            "minLength": 1,
            "type": "string"
          },
          "cardinalDirection": {
            "$ref": "#/components/schemas/CardinalDirection"
          },
          "emailConfirmationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CardActivationTransactionDto": {
        "type": "object",
        "properties": {
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "pin": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "lastStatusChange": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/CardActivationTransactionStatus"
          },
          "transactionRef": {
            "type": "string",
            "nullable": true
          },
          "eaN13": {
            "type": "string",
            "nullable": true
          },
          "termsAccepted": {
            "type": "boolean"
          },
          "reservationTraceGuid": {
            "type": "string",
            "nullable": true
          },
          "activationTraceGuid": {
            "type": "string",
            "nullable": true
          },
          "lastReturnCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CardActivationTransactionStatus": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "CardinalDirection": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "CardinalDirectionRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          }
        },
        "additionalProperties": false
      },
      "CardinalDirectionResponse": {
        "type": "object",
        "properties": {
          "cardinalDirection": {
            "$ref": "#/components/schemas/CardinalDirection"
          }
        },
        "additionalProperties": false
      },
      "CardinalDirectionResponseDataResponseBase": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CardinalDirectionResponse"
          }
        },
        "additionalProperties": false
      },
      "ChangePasswordRequest": {
        "required": [
          "newPassword"
        ],
        "type": "object",
        "properties": {
          "newPassword": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "DealsRegistrationRequest": {
        "required": [
          "email",
          "password",
          "termsAccepted"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "termsAccepted": {
            "type": "boolean"
          },
          "newsletterAccepted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Domain": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ForgotPasswordByEmailRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          }
        },
        "additionalProperties": false
      },
      "GymSubscription": {
        "type": "object",
        "properties": {
          "subscriptionStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "subscriptionEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nextRecurringDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isCancelled": {
            "type": "boolean",
            "nullable": true
          },
          "cancellationReason": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "activePaymentGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "membershipProductId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastPaymentGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Membership": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "months": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "membershipProductId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "activationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "voucher": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "gymSubscriptionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "subscriptionRequested": {
            "type": "boolean",
            "nullable": true
          },
          "paymentGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastPaymentGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MembershipsAndSubscriptionsDto": {
        "type": "object",
        "properties": {
          "memberships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Membership"
            },
            "nullable": true
          },
          "gymSubscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GymSubscription"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageShowType": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "NewPasswordResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NewPasswordResponseDataMessageResponseBase": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NewPasswordResponse"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NewPasswordResponseDataResponseBase": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NewPasswordResponse"
          }
        },
        "additionalProperties": false
      },
      "Payment": {
        "type": "object",
        "properties": {
          "paymentGuid": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isSubscription": {
            "type": "boolean",
            "nullable": true
          },
          "isSubsequentPayment": {
            "type": "boolean",
            "nullable": true
          },
          "captureDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hostedCheckoutId": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "paymentStatus": {
            "type": "string",
            "nullable": true
          },
          "paymentStatusCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paymentStatusCategory": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentsAndRefundsDto": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            },
            "nullable": true
          },
          "refunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Refund"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Refund": {
        "type": "object",
        "properties": {
          "refundGuid": {
            "type": "string",
            "format": "uuid"
          },
          "refundId": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "payment": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "acquiredAmount": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "refundAmount": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "refundStatus": {
            "type": "string",
            "nullable": true
          },
          "refundStatusCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "refundStatusCategory": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterCustomerByEmailRequest": {
        "required": [
          "addressPostalCode",
          "email",
          "firstName",
          "lastName",
          "password",
          "termsAccepted"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 32,
            "minLength": 8,
            "type": "string"
          },
          "firstName": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[a-zA-ZäöüÄÖÜß-]+$",
            "type": "string"
          },
          "lastName": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[a-zA-ZäöüÄÖÜß-]+$",
            "type": "string"
          },
          "addressPostalCode": {
            "maxLength": 7,
            "minLength": 4,
            "type": "string"
          },
          "termsAccepted": {
            "type": "boolean"
          },
          "newsletterAccepted": {
            "type": "boolean"
          },
          "countryCode": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResendVerificationEmailRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          }
        },
        "additionalProperties": false
      },
      "ResponseBase": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "showType": {
            "$ref": "#/components/schemas/MessageShowType"
          },
          "errorCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RevokeTokenRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "notificationToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SportsRegistrationRequest": {
        "required": [
          "email",
          "password",
          "termsAccepted"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "termsAccepted": {
            "type": "boolean"
          },
          "newsletterAccepted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "StringBaseResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "StringDataResponseBase": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscribeNewsletterRequest": {
        "required": [
          "email",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[a-zA-ZäöüÄÖÜß-]+$",
            "type": "string"
          },
          "lastName": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[a-zA-ZäöüÄÖÜß-]+$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TokenRequestModel": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserDetailsResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "cardinalDirection": {
            "$ref": "#/components/schemas/CardinalDirection"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "encryptedEmail": {
            "type": "string",
            "nullable": true
          },
          "ciamUserId": {
            "type": "string",
            "nullable": true
          },
          "ciamUsername": {
            "type": "string",
            "nullable": true
          },
          "membershipsAndSubscriptions": {
            "$ref": "#/components/schemas/MembershipsAndSubscriptionsDto"
          },
          "paymentsAndRefunds": {
            "$ref": "#/components/schemas/PaymentsAndRefundsDto"
          },
          "cardActivationTransactionDtos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardActivationTransactionDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "scheme": "Bearer"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}
