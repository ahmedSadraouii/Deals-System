{
  "openapi": "3.0.1",
  "info": {
    "title": ".NET Core Web API",
    "version": "1.0"
  },
  "paths": {
    "/api/registration/user": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Registers a user by email",
        "description": "Registers a user by email",
        "operationId": "RegisterUserByEmailAsync",
        "parameters": [
          {
            "name": "domain",
            "in": "header",
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Domain"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserByEmailRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserByEmailRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserByEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User was registered.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/registration/deals": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Registers a user on Deals",
        "description": "Registers a user on Deals",
        "operationId": "RegisterOnDealsAsync",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DealsRegistrationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DealsRegistrationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DealsRegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/registration/sports": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Registers a user on Sports",
        "description": "Registers a user on Sports",
        "operationId": "RegisterOnSportsAsync",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SportsRegistrationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SportsRegistrationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SportsRegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/change-password": {
      "put": {
        "tags": [
          "Authentication"
        ],
        "summary": "Update password",
        "description": "Updates user password",
        "operationId": "UpdateUserPassword",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password was updated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/deactivate-account": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Deactivate user account",
        "description": "Deactivate user account",
        "operationId": "DeactivateUserAccount",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeactivateUserAccountRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeactivateUserAccountRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeactivateUserAccountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User account deactivated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/delete-userdata": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user data",
        "description": "Delete user data",
        "operationId": "DeleteUserData",
        "parameters": [
          {
            "name": "domain",
            "in": "header",
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/Domain"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteUserDataRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteUserDataRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteUserDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User data deleted.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user profile",
        "description": "Get user profile",
        "operationId": "GetAsync",
        "parameters": [
          {
            "name": "ciamId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cardinalDirection",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/CardinalDirection"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns user profile.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailsDto"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user profile",
        "description": "Updates user profile",
        "operationId": "UpdateAsync",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User profile has been updated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/get-user-by-userId": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user profile",
        "description": "Get user profile",
        "operationId": "GetUserByUserId",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cardinalDirection",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/CardinalDirection"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns user profile.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailsDto"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/address": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Add/Update an address for a user",
        "description": "Add/Update an address for a user. For addressType 'Home', which is default address, postal code cannot be changed",
        "operationId": "AddAddress",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAddressRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAddressRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddAddressRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Address has been added.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete an address of a user",
        "description": "Delete an address of a user. Address with addressType 'Home' cannot be deleted",
        "operationId": "DeleteAddress",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAddressRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAddressRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAddressRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Address has been deleted.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/addresses": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get addresses of a user",
        "description": "Get addresses of a user.",
        "operationId": "GetAddresses",
        "parameters": [
          {
            "name": "CiamId",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CardinalDirection",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/CardinalDirection"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Addressess returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/get-user-by-email": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Get user by email",
        "description": "Get user by email",
        "operationId": "GetUserByEmailAsync",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUserByEmailRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUserByEmailRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetUserByEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns user data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/get-users-by-email": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Get users by emails",
        "description": "Get users by emails",
        "operationId": "GetUsersByEmailAsync",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUsersByEmailRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUsersByEmailRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetUsersByEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns user data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/{ciamId}/get-userid": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get userID by ciamID",
        "description": "Get userID by ciamID",
        "operationId": "GetUserIdByCiamIdAsync",
        "parameters": [
          {
            "name": "ciamId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cardinalDirection",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/CardinalDirection"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns user data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserIdResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserIdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserIdResponse"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/{ciamId}/get-user-details": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user details by ciamID",
        "description": "Get user details by ciamID",
        "operationId": "GetUserDetailsByCiamIdAsync",
        "parameters": [
          {
            "name": "ciamId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cardinalDirection",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/CardinalDirection"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns user data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailsSimpleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailsSimpleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailsSimpleDto"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/get-users": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Get users by userIds",
        "description": "Get users by userIds",
        "operationId": "GetUsersByUserIdsAsync",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUsersByUserIdsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUsersByUserIdsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetUsersByUserIdsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns user data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDetailsSimpleDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDetailsSimpleDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDetailsSimpleDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/get-users-by-query": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Get users by query",
        "description": "Get users by query",
        "operationId": "GetUsersByQueryAsync",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUserByQueryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUserByQueryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetUserByQueryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns users data.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserAdminDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserAdminDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserAdminDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/{ciamId}/aldisport-user-data": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get aldisport user data",
        "description": "Get aldisport user data",
        "operationId": "GetAldiSportUserDataAsync",
        "parameters": [
          {
            "name": "ciamId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cardinalDirection",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/CardinalDirection"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns user data.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AldiSportUserDataDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AldiSportUserDataDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AldiSportUserDataDto"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/{userId}/aldisport-user-data": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update aldisport user data",
        "description": "Updates aldisport user data",
        "operationId": "UpdateAldiSportUserDataAsync",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AldiSportUserDataUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AldiSportUserDataUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AldiSportUserDataUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User data has been updated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/get-users-without-membership": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get users without membership",
        "description": "Get users without membership",
        "operationId": "GetUserIdsWithoutMembership",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserIdsHaveNotFirstMembership"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserIdsHaveNotFirstMembership"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserIdsHaveNotFirstMembership"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data sent by client.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          },
          "500": {
            "description": "An internal error occured.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBase"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddAddressRequest": {
        "required": [
          "addressPostalCode",
          "addressType",
          "cardinalDirection",
          "ciamId"
        ],
        "type": "object",
        "properties": {
          "ciamId": {
            "minLength": 1,
            "type": "string"
          },
          "addressCity": {
            "type": "string",
            "nullable": true
          },
          "addressStreet": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[a-zA-ZäöüÄÖÜß0-9\\s,'-]*$",
            "type": "string",
            "nullable": true
          },
          "addressHouseNumber": {
            "pattern": "^[1-9]\\d*(?:[ -]?(?:[a-zA-Z]+|[1-9]\\d*))?$",
            "type": "string",
            "nullable": true
          },
          "addressPostalCode": {
            "minLength": 1,
            "pattern": "^\\d{5}$",
            "type": "string"
          },
          "addressType": {
            "$ref": "#/components/schemas/AddressType"
          },
          "cardinalDirection": {
            "$ref": "#/components/schemas/CardinalDirection"
          }
        },
        "additionalProperties": false
      },
      "AddressDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "type": "string",
            "nullable": true
          },
          "addressType": {
            "$ref": "#/components/schemas/AddressType"
          },
          "isDefault": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddressType": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "AldiSportUserDataDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "newsletterAccepted": {
            "type": "boolean",
            "nullable": true
          },
          "gymStudioId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AldiSportUserDataUpdateRequest": {
        "required": [
          "cardinalDirection"
        ],
        "type": "object",
        "properties": {
          "hasFirstMembership": {
            "type": "boolean",
            "nullable": true
          },
          "newsletterAccepted": {
            "type": "boolean",
            "nullable": true
          },
          "isAnamneseSaved": {
            "type": "boolean",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/UserStatus"
          },
          "isSportGameParticipant": {
            "type": "boolean",
            "nullable": true
          },
          "cardinalDirection": {
            "$ref": "#/components/schemas/CardinalDirection"
          }
        },
        "additionalProperties": false
      },
      "CardinalDirection": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ChangePasswordRequest": {
        "required": [
          "cardinalDirection",
          "ciamId",
          "currentPassword",
          "newPassword"
        ],
        "type": "object",
        "properties": {
          "currentPassword": {
            "minLength": 1,
            "type": "string"
          },
          "newPassword": {
            "minLength": 1,
            "type": "string"
          },
          "ciamId": {
            "minLength": 1,
            "type": "string"
          },
          "cardinalDirection": {
            "$ref": "#/components/schemas/CardinalDirection"
          }
        },
        "additionalProperties": false
      },
      "DeactivateUserAccountRequest": {
        "required": [
          "cardinalDirection",
          "ciamId"
        ],
        "type": "object",
        "properties": {
          "ciamId": {
            "minLength": 1,
            "type": "string"
          },
          "cardinalDirection": {
            "$ref": "#/components/schemas/CardinalDirection"
          }
        },
        "additionalProperties": false
      },
      "DealsRegistrationRequest": {
        "required": [
          "email",
          "termsAccepted"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "termsAccepted": {
            "type": "boolean"
          },
          "newsletterAccepted": {
            "type": "boolean"
          },
          "cardinalDirection": {
            "$ref": "#/components/schemas/CardinalDirection"
          }
        },
        "additionalProperties": false
      },
      "DeleteAddressRequest": {
        "required": [
          "addressId",
          "cardinalDirection",
          "ciamId"
        ],
        "type": "object",
        "properties": {
          "ciamId": {
            "minLength": 1,
            "type": "string"
          },
          "addressId": {
            "type": "integer",
            "format": "int32"
          },
          "cardinalDirection": {
            "$ref": "#/components/schemas/CardinalDirection"
          }
        },
        "additionalProperties": false
      },
      "DeleteUserDataRequest": {
        "required": [
          "cardinalDirection",
          "ciamId"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "ciamId": {
            "minLength": 1,
            "type": "string"
          },
          "cardinalDirection": {
            "$ref": "#/components/schemas/CardinalDirection"
          }
        },
        "additionalProperties": false
      },
      "Domain": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "EmailWithCardinalDirection": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "cardinalDirection": {
            "$ref": "#/components/schemas/CardinalDirection"
          }
        },
        "additionalProperties": false
      },
      "Gender": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "GetUserByEmailRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "cardinalDirection": {
            "$ref": "#/components/schemas/CardinalDirection"
          }
        },
        "additionalProperties": false
      },
      "GetUserByQueryRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "customerNumber": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "cardinalDirection": {
            "$ref": "#/components/schemas/CardinalDirection"
          }
        },
        "additionalProperties": false
      },
      "GetUsersByEmailRequest": {
        "type": "object",
        "properties": {
          "emails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailWithCardinalDirection"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUsersByUserIdsRequest": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "cardinalDirection": {
            "$ref": "#/components/schemas/CardinalDirection"
          }
        },
        "additionalProperties": false
      },
      "MessageShowType": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "RegisterUserByEmailRequest": {
        "required": [
          "addressPostalCode",
          "email",
          "firstName",
          "lastName",
          "password",
          "termsAccepted"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 32,
            "minLength": 8,
            "type": "string"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^[a-zA-ZäöüÄÖÜß-]+$",
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^[a-zA-ZäöüÄÖÜß-]+$",
            "type": "string"
          },
          "addressPostalCode": {
            "minLength": 1,
            "pattern": "^\\d{5}$",
            "type": "string"
          },
          "termsAccepted": {
            "type": "boolean"
          },
          "newsletterAccepted": {
            "type": "boolean"
          },
          "cardinalDirection": {
            "$ref": "#/components/schemas/CardinalDirection"
          }
        },
        "additionalProperties": false
      },
      "ResponseBase": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "showType": {
            "$ref": "#/components/schemas/MessageShowType"
          }
        },
        "additionalProperties": false
      },
      "SportsRegistrationRequest": {
        "required": [
          "email",
          "termsAccepted"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "termsAccepted": {
            "type": "boolean"
          },
          "newsletterAccepted": {
            "type": "boolean"
          },
          "cardinalDirection": {
            "$ref": "#/components/schemas/CardinalDirection"
          }
        },
        "additionalProperties": false
      },
      "UserAdminDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/UserStatus"
          },
          "ciamUserId": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "customerNumber": {
            "type": "integer",
            "format": "int64"
          },
          "cardinalDirection": {
            "$ref": "#/components/schemas/CardinalDirection"
          }
        },
        "additionalProperties": false
      },
      "UserDetailsDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "cardinalDirection": {
            "$ref": "#/components/schemas/CardinalDirection"
          },
          "ciamUserId": {
            "type": "string",
            "nullable": true
          },
          "ciamUsername": {
            "type": "string",
            "nullable": true
          },
          "customerNumber": {
            "type": "integer",
            "format": "int64"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "addressCity": {
            "type": "string",
            "nullable": true
          },
          "addressStreet": {
            "type": "string",
            "nullable": true
          },
          "addressHouseNumber": {
            "type": "string",
            "nullable": true
          },
          "addressPostalCode": {
            "type": "string",
            "nullable": true
          },
          "profilePictureUri": {
            "type": "string",
            "nullable": true
          },
          "termsAccepted": {
            "type": "boolean"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "newsletterAccepted": {
            "type": "boolean",
            "nullable": true
          },
          "gymStudioId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "isAnamneseSaved": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/UserStatus"
          },
          "isSportGameParticipant": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserDetailsSimpleDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "customerNumber": {
            "type": "integer",
            "format": "int64"
          },
          "ciamId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "addressPostalCode": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "profilePictureUri": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "ciamUserId": {
            "type": "string",
            "nullable": true
          },
          "ciamUsername": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "cardinalDirection": {
            "$ref": "#/components/schemas/CardinalDirection"
          },
          "customerNumber": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "newsletterAccepted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserIdResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserIdsHaveNotFirstMembership": {
        "type": "object",
        "properties": {
          "suedUsersHaveNotFirstMembership": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "nordUsersHaveNotFirstMembership": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserStatus": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "UserUpdateRequest": {
        "required": [
          "cardinalDirection",
          "ciamId",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "ciamId": {
            "minLength": 1,
            "type": "string"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^[a-zA-ZäöüÄÖÜß-]+$",
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^[a-zA-ZäöüÄÖÜß-]+$",
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "addressCity": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^[a-zA-ZäöüÄÖÜß0-9\\s,'-]*$",
            "type": "string",
            "nullable": true
          },
          "addressStreet": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[a-zA-ZäöüÄÖÜß0-9\\s,'-]*$",
            "type": "string",
            "nullable": true
          },
          "addressHouseNumber": {
            "pattern": "^[1-9]\\d*(?:[ -]?(?:[a-zA-Z]+|[1-9]\\d*))?$",
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "phoneNumber": {
            "maxLength": 20,
            "minLength": 0,
            "pattern": "^\\+\\d{1,5}-\\d{5,12}$",
            "type": "string",
            "nullable": true
          },
          "cardinalDirection": {
            "$ref": "#/components/schemas/CardinalDirection"
          },
          "gymStudioId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "scheme": "Bearer"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}
